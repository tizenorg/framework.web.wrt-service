SET(dependencies "dlog nodejs sqlite3 security-client")
PKG_CHECK_MODULES(pkgs REQUIRED ${dependencies})

INCLUDE_DIRECTORIES (
    ${pkgs_INCLUDE_DIRS}
)

SET(SRCS
    native-context.cpp
    access-control.cpp
)

ADD_DEFINITIONS("-fPIC")
#ADD_DEFINITIONS("-DUSE_SECURITY_CLIENT")

# Shared Library
ADD_LIBRARY(${TARGET_COMMON_NATIVE} SHARED ${SRCS})
SET_TARGET_PROPERTIES(${TARGET_COMMON_NATIVE} PROPERTIES SOVERSION ${FULLVER} VERSION ${MAJORVER})
TARGET_LINK_LIBRARIES(${TARGET_COMMON_NATIVE} ${pkgs_LIBRARIES})
INSTALL(TARGETS ${TARGET_COMMON_NATIVE} DESTINATION lib)

# Header Files for Development
SET(INC_DIR include/wrt-common)
INSTALL(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/ DESTINATION ${INC_DIR}
        FILES_MATCHING PATTERN "*.h" PATTERN "CMakeFiles" EXCLUDE)

# pkg-config For Development
SET(PC_NAME ${TARGET_COMMON_NATIVE})
SET(PACKAGE_DESCRIPTION "WRT Common Library for Native Module")
SET(VERSION ${FULLVER})
SET(PC_REQUIRED ${dependencies})
SET(PC_LDFLAGS -l${TARGET_COMMON_NATIVE})
SET(PC_CFLAGS -I${CMAKE_INSTALL_PREFIX}/${INC_DIR})

CONFIGURE_FILE(
    ${TARGET_COMMON_NATIVE}.pc.in
    ${CMAKE_CURRENT_SOURCE_DIR}/${TARGET_COMMON_NATIVE}.pc
    @ONLY
)
INSTALL(FILES ${CMAKE_CURRENT_SOURCE_DIR}/${TARGET_COMMON_NATIVE}.pc DESTINATION lib/pkgconfig)
